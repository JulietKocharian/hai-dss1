// src/utils/scenarios.js
import axios from 'axios';

/**
 * ‘≥’¨’≠’°’æ’∏÷Ä ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’ù ’Ω÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’Ω’ø’•’≤’Æ’¥’°’∂ ’∞’°’¥’°÷Ä
 */
export const generateAIScenarios = async (dataType, analysisResults, clusterData = [], contextData = {}) => {
    try {
        // Prompt-’´ ’∫’°’ø÷Ä’°’Ω’ø’∏÷Ç’¥
        const cleanedResults = { ...analysisResults };
        delete cleanedResults.fuzzyResults?.confidenceDistribution;
        console.log(cleanedResults, 'jjjjjjjjjjjj');

        const prompt = buildContextPrompt(dataType, cleanedResults, clusterData, contextData);

        console.log(prompt, 'üî• Prompt');

        // ’à÷Ç’≤’°÷Ä’Ø’∏÷Ç’¥ backend-’´’∂’ù ’°’¥’¢’∏’≤’ª cluster data-’∏’æ
        const response = await axios.post(
            'https://gateway.amracode.am/api/v1/ai/ask',
            {
                dataType,
                analysisResults,
                clusters: clusterData,   // <‚Äî –ø–µ—Ä–µ–¥–∞—ë–º JSON, –∞ –Ω–µ –≤—Å—Ç–∞–≤–ª—è–µ–º –≤ prompt
            },
            {
                timeout: 60000,
                headers: { 'Content-Type': 'application/json' },
            }
        );

        console.log('‚úÖ AI Response Data:', response.data);

        let parsed = response.data.reply;

        if (typeof parsed === 'string') parsed = JSON.parse(parsed);

        const scenarios = parsed?.scenarios || [];

        return scenarios.map((scenario, index) => ({
            id: `ai_${Date.now()}_${index}`,

            // ’Ä’°’µ’•÷Ä’•’∂ ’¢’°’∂’°’¨’´’∂’•÷Ä’®
            title: scenario.name || scenario["name"] || `’ç÷Å’•’∂’°÷Ä ${index + 1}`,
            description: scenario.description || scenario["description"] || "",

            // ‘ø’°’∂’≠’°’§÷Ä’∏÷Ç’µ’©’∂’•÷Ä (assumptions)
            preconditions: scenario.assumptions || scenario["assumptions"] || [],

            // ’å’´’Ω’Ø’•÷Ä
            risks: (scenario.risks || scenario["risks"] || []).map(risk => ({
                title: risk.title || risk["title"] || "",
                impact: risk.impact || risk["impact"] || "medium",
                probability: risk.probability || risk["probability"] || 0.5,
                response: risk.treatment || risk["treatment"] || "",
                mitigationSteps: risk.mitigation_steps || risk["mitigation_steps"] || [],
            })),

            // ‘≥’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä
            actions: (scenario.recommended_actions || scenario["recommended_actions"] || []).map(action => ({
                step: action.step || action["step"] || "",
                responsible: action.responsible || action["responsible"] || "",
                deadline: action.deadline || action["deadline"] || "",
                justification: action.justification || action["justification"] || "",
            })),

            // ’ç’∫’°’Ω’æ’∏’≤ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä
            expectedOutcomes: scenario.expected_measurable_outcomes || scenario["expected_measurable_outcomes"] || [],

            // ‘±’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂
            priority: scenario.priority || 'medium',
            priorityText: (() => {
                const priority = scenario.priority || 'medium';
                switch (priority) {
                    case 'high': return '‘≤’°÷Ä’±÷Ä ’°’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂';
                    case 'medium': return '’Ñ’´’ª’´’∂ ’°’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂';
                    case 'low': return '’ë’°’Æ÷Ä ’°’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂';
                    default: return '’Ñ’´’ª’´’∂ ’°’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂';
                }
            })()
        }));


    } catch (error) {
        console.error('AI Scenario Generation Error:', error);
        throw error;
    }
};

/**
 * Prompt-’´ ’∫’°’ø÷Ä’°’Ω’ø’∏÷Ç’¥ (’∞’°’µ’•÷Ä’•’∂)
 */
const buildContextPrompt = (dataType, analysisResults, clusterData, contextData) => {
    const dataTypeTranslations = {
        demographic: '’§’•’¥’∏’£÷Ä’°÷Ü’´’°’Ø’°’∂',
        healthcare: '’°’º’∏’≤’ª’°’∫’°’∞’°’Ø’°’∂',
        quality_of_life: '’Ø’µ’°’∂÷Ñ’´ ’∏÷Ä’°’Ø’´',
        educational: '’Ø÷Ä’©’°’Ø’°’∂',
    };

    let prompt = `’Ñ’•’∂’•’ª’•÷Ä’°’Ø’°’∂ ’∏÷Ä’∏’∑’∏÷Ç’¥’∂’•÷Ä’´ ’∞’°’¥’°’Ø’°÷Ä’£ - ${dataTypeTranslations[dataType] || dataType} ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’æ’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’∏÷Ç’∂÷â ‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’¥ ’¥’∑’°’Ø’•’¨ ’°’º’°’æ’•’¨’°’£’∏÷Ç’µ’∂’® 3 ’Ω÷Å’•’∂’°÷Ä ’∞’°’µ’•÷Ä’•’∂’∏’æ÷â`;

    // ’é’Ω’ø’°’∞’∏÷Ç’©’µ’°’∂ ’¥’°’Ø’°÷Ä’§’°’Ø
    if (analysisResults?.fuzzyResults) {
        const fr = analysisResults.fuzzyResults;
        prompt += `\n’é’Ω’ø’°’∞’∏÷Ç’©’µ’°’∂ ’¥’°’Ø’°÷Ä’§’°’Ø:\n‚Ä¢ ‘≤’°÷Ä’±÷Ä: ${fr.high || 0}%\n‚Ä¢ ’Ñ’´’ª’´’∂: ${fr.medium || 0}%\n‚Ä¢ ’ë’°’Æ÷Ä: ${fr.low || 0}%`;
        if (fr.analysis) prompt += `\n’Ä’°’∑’æ’•’ø’æ’∏÷Ç’©’µ’∏÷Ç’∂: ${fr.analysis}`;
    }

    // ’é’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’°’∂ ’Ω’ø’°’ø’´’Ω’ø’´’Ø’°
    if (analysisResults?.statistics) {
        const stats = analysisResults.statistics;
        prompt += `\n’é’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’°’∂ ’Ω’ø’°’ø’´’Ω’ø’´’Ø’°:\n‚Ä¢ ’Ñ’´’ª’´’∂ ’°÷Ä’™’•÷Ñ: ${stats.mean ?? 'N/A'}\n‚Ä¢ ’Ñ’´’∂’´’¥’°’¨ ’°÷Ä’™’•÷Ñ: ${stats.min ?? 'N/A'}\n‚Ä¢ ’Ñ’°÷Ñ’Ω’´’¥’°’¨ ’°÷Ä’™’•÷Ñ: ${stats.max ?? 'N/A'}`;
    }

    // ‘Ω’¥’¢’•÷Ä’ù ’°’¥’¢’∏’≤’ª’°’Ø’°’∂ ’ø’æ’µ’°’¨’∂’•÷Ä’∏’æ
    if (clusterData?.length) {
        prompt += `\n’Ä’°’µ’ø’∂’°’¢’•÷Ä’æ’°’Æ ’≠’¥’¢’•÷Ä ÷á ’ø’æ’µ’°’¨’∂’•÷Ä’®:\n`;
        clusterData.forEach(c => {
            prompt += `\n‚Ä¢ ${c.label} (’∞’°÷Ä’∏÷Ç’Ω’ø’∏÷Ç’©’µ’∏÷Ç’∂: ${c.avgValue}, ’∏÷Ä’°’Ø: ${c.quality}, ’π’°÷É’∂’æ’°’Æ ’°’∂’±’´’∂÷Ñ: ${c.size})`;
            c.points?.forEach((p, pi) => {
                prompt += `\n   ‚Ä¢ ’ä’°’ø’Ø’•÷Ä’æ’°’Æ ’°’∂’± ${pi + 1}:`;
                Object.entries(p.originalData || {}).forEach(([key, value]) => {
                    prompt += ` ${key}: ${value};`;
                });
            });
        });
    }

    if (contextData?.budget) prompt += `\n‘≤’µ’∏÷Ç’ª’•: ${contextData.budget}`;

    prompt += `\n‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’¥ ’Ω’ø’•’≤’Æ’•’¨ ’µ’∏÷Ç÷Ä’°÷Ñ’°’∂’π’µ’∏÷Ç÷Ä ’Ω÷Å’•’∂’°÷Ä’´ ’∞’°’¥’°÷Ä’ù ’æ’•÷Ä’∂’°’£’´÷Ä, ’∂’Ø’°÷Ä’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂, ’º’´’Ω’Ø’•÷Ä, ’°’º’°’ª’°÷Ä’Ø’æ’∏’≤ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä, ’Ω’∫’°’Ω’æ’∏’≤ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä ÷á ’Ø’°’∂’≠’°’§÷Ä’∏÷Ç’µ’©’∂’•÷Ä:`;

    return prompt;
};
